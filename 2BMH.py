#2. Алгоритм Бойера-Мура-Хорспула

# Формирование таблицы смещений
t = "добр"

M = len(t)
S = set()
d = {} #словарь смещений

for i in range(M-2, -1, -1): #итерации с предпоследнего элемента до первого (нулевого индекса)
    if t[i] not in S: #смещение для элементов, которых еще нет в S
        d[t[i]] = M-i-1 #M-i-1 определяет смещение от конца образа
        S.add(t[i])

if t[M-1] not in S: #для последнего элемента отдельное смещение равное длине образа
    d[t[M-1]] = M

d['*'] = M #смещение для остальных символов

print(d)

#Поиск образа в строке
a = "вечер добрый"
N = len(a)

if N >= M:
    i = M-1

    while (i < N):
        k = 0
        for j in range(M-1, -1, -1): #итерации от последнего элемента до первого
            if a[i-k] != t[j]:
                if j == M-1: #если сравнивалось с последним элементом образа берем смещение по символу из строки поиска,
                    # если он есть в словаре, то берем смещение равное этому символу
                    off = d[a[i]] if d.get(a[i], False) else d['*'] #если нет, то смещение всех остальных
                else:
                    off = d[t[j]] #если сравнивалось не с последним, то берем смещение по символу из образа

                i += off #смещение счетчика строки
                break
            k += 1 #смещение проверяемого символа в строке

        if j == 0:
            print(f"образ найден по индексу {i-k+1}")
            break
    else:
        print("образ не найден")
else:
    print("образ не найден")




